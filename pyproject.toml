[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "segmentor"
version = "0.1.0"
description = "Production-grade segmentation tool with SAM v1/v2 support"
authors = [{name = "Segmentor Team", email = "team@example.com"}]
readme = "README.md"
requires-python = ">=3.10"
license = {text = "Apache-2.0"}
keywords = ["segmentation", "sam", "computer-vision", "deep-learning"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "numpy>=1.24.0",
    "pillow>=10.0.0",
    "shapely>=2.0.0",
    "opencv-python>=4.8.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "requests>=2.31.0",
    "typing-extensions>=4.8.0",
]

[project.optional-dependencies]
torch = [
    "torch>=2.0.0",
    "torchvision>=0.15.0",
]
onnx = [
    "onnxruntime>=1.16.0",
    "onnxruntime-gpu>=1.16.0",
]
server = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "python-multipart>=0.0.6",
    "prometheus-client>=0.19.0",
]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.11.0",
    "isort>=5.12.0",
    "ruff>=0.1.5",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
    "httpx>=0.25.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
]
all = [
    "segmentor[torch,onnx,server,dev,docs]",
]

[project.scripts]
segmentor-cli = "segmentor.cli:main"

[project.urls]
Homepage = "https://github.com/tannousgeagea/segmentor"
Documentation = "https://segmentor.readthedocs.io"
Repository = "https://github.com/tannousgeagea/segmentor"

[tool.setuptools.packages.find]
include = ["segmentor*", "service*"]

[tool.black]
line-length = 100
target-version = ['py310']

[tool.isort]
profile = "black"
line_length = 100

[tool.ruff]
line-length = 100
select = ["E", "F", "I", "N", "W", "UP"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=segmentor --cov-report=html --cov-report=term"